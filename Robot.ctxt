#BlueJ class context
comment0.target=Robot
comment0.text=\r\n\ In\ this\ Class\ the\ Robot\ will\ be\ able\ to\ answer\ few\ Questions\r\n\ The\ Class\ Roboter\ is\ a\ SubCalss\ from\ Class\ Kreis\r\n
comment1.params=
comment1.target=Robot()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Roboter\r\n
comment10.params=
comment10.target=void\ reset()
comment10.text=\r\n\ to\ Reset\ the\ Robot\ Position\ and\ Color\r\n\ we\ need\ this\ method\ if\ we\ re-Enter\ a\ Obstcals\ Numbers\ without\ restarting\ the\ Program\r\n
comment11.params=g
comment11.target=void\ draw(java.awt.Graphics)
comment11.text=\r\n\ Drawing\ the\ Robot\ and\ just\ call\ the\ method\ in\ Class\ "Leinwand"\r\n
comment2.params=
comment2.target=void\ speechRecognition()
comment2.text=\r\n\ In\ this\ Method,\ the\ User\ can\ ask\ Questions\ and\ the\ Roboter\ will\ answer,\ using\ KeyWords\ to\ define\ The\ Correct\ answer\ for\ the\ Question\r\n
comment3.params=WallX\ WallY
comment3.target=boolean\ onWall(int,\ int)
comment3.text=\r\n\ If\ the\ Robot\ at\ the\ Edge\ of\ our\ Panle\ then\ "return"\ true\ and\ "false"\ otherwise.\r\n
comment4.params=step\ obstacles
comment4.target=boolean\ canMoveRight(int,\ java.util.ArrayList)
comment4.text=\r\n\ Check\ if\ the\ Robot\ can\ move\ Right\ and\ return\ "false"\ if\ he\ can't\ and\ "true"\ if\ he\ can.\r\n\ @getPosition().getX()\ <\ rechteck.getPosition().getX()\ the\ Robot\ will\ check\ if\ he\ at\ left\ of\ the\ Obstcal,\ without\ it\ the\ Robot\ won't\ move\ straight\r\n\ @betweenObstcalsEdge_Y()\ is\ Down\ declare\ it\ \r\n
comment5.params=step\ obstacles
comment5.target=boolean\ canMoveLeft(int,\ java.util.ArrayList)
comment5.text=\r\n\ Check\ if\ the\ Robot\ can\ move\ Right\ and\ return\ "false"\ if\ he\ can't\ and\ "true"\ if\ he\ can.\r\n\ @getPosition().getX()\ <\ rechteck.getPosition().getX()\ the\ Robot\ will\ check\ if\ he\ at\ left\ of\ the\ Obstcal,\ without\ it\ the\ Robot\ won't\ move\ straight\r\n\ @betweenObstcalsEdge_Y()\ is\ Down\ declare\ it\ \r\n
comment6.params=step\ obstacles
comment6.target=boolean\ canMoveDown(int,\ java.util.ArrayList)
comment6.text=\r\n\ Check\ if\ the\ Robot\ can\ move\ Down\ and\ return\ false\ if\ he\ can't\ and\ true\ if\ he\ can.\r\n\ @getPosition().getY()\ <\ rechteck.getPosition().getY()\ the\ Robot\ will\ check\ if\ he\ is\ Up\ of\ the\ Obstcal,\ without\ it\ the\ Robot\ won't\ move\ straight\r\n\ @betweenObstcalsEdge_X()\ is\ Down\ declare\ it\ \r\n
comment7.params=rectangle
comment7.target=boolean\ betweenObstcalsEdge_Y(Rectangle)
comment7.text=\r\n\ Check\ if\ the\ Robot\ is\ bewtween\ Obstcal\ Edge\ of\ the\ Y-Achse\r\n
comment8.params=rectangle
comment8.target=boolean\ betweenObstcalsEdge_X(Rectangle)
comment8.text=\r\n\ Check\ if\ the\ Robot\ is\ bewtween\ Obstcal\ Edge\ of\ the\ X-Achse\r\n
comment9.params=point
comment9.target=void\ moveTo(Point)
comment9.text=\r\n\ Method\ to\ help\ the\ Robot\ move\ from\ Point\ to\ other\r\n
numComments=12
