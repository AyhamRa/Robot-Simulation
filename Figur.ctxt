#BlueJ class context
comment0.target=Figur
comment0.text=\r\n\ The\ Calss\ "Figur"\ is\ a\ Superclass\ form\ "Abstract"\ Type\r\n\ @Abstract\ Class\ its\ like\ a\ General\ Class,\ That's\ mean\ which\ Method\ have\ abstract\ Type\ here\ have\ no\ body\ and\ should\ do\ override\ it\ in\ the\ \r\n\ required\ Classes\ to\ declare\ the\ Methods.\r\n\ Normal\ Methods\ can\ also\ be\ written.\r\n
comment1.params=position\ color
comment1.target=Figur(Point,\ java.awt.Color)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Figur\r\n
comment10.params=
comment10.target=int\ minY()
comment11.params=
comment11.target=int\ maxX()
comment12.params=
comment12.target=int\ maxY()
comment2.params=
comment2.target=java.awt.Color\ getColor()
comment2.text=\r\n\ Transfer\ the\ Methods\ from\ Class\ "Rechteck"\ to\ the\ Supercall\ Hier.\ So\ we\ can\ use\ it\ for\ the\ "Kreis\ Robot"\ to.\r\n
comment3.params=
comment3.target=Point\ getPosition()
comment4.params=color
comment4.target=void\ setColor(java.awt.Color)
comment4.text=\r\n\ the\ Color\ Error\ should\ be\ in\ every\ station\ so\ if\ we\ make\ an\ objekt\ from\ the\ constructor\ or\ set\r\n\ the\ Color\ the\ program\ will\ be\ able\ to\ find\ the\ issue\r\n
comment5.params=position
comment5.target=void\ setPosition(Point)
comment6.params=x\ y
comment6.target=void\ setPosition(int,\ int)
comment7.params=dx\ dy
comment7.target=void\ moveAround(int,\ int)
comment7.text=\r\n\ changed\ the\ current\ position\ of\ a\ rectangle\ by\ dx\ and\ dy\ pixels\r\n
comment8.params=verschiebevektor
comment8.target=void\ moveAround(Point)
comment8.text=\r\n\ the\ position\ of\ the\ rectangle\ around\ the\ x\ and\ y\ values\ of\ the\ parameter\r\n\ transferred\ shift\ vector\ changed\r\n
comment9.params=
comment9.target=int\ minX()
comment9.text=\r\n\ Abstract\ Methods\ and\ will\ be\ overridden\ in\ Classes\ "\ Kreis\ &\ Rechteck".\r\n
numComments=13
